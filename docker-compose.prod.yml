version: "3.8"

services:
  db:
    image: postgres:12.2
    volumes:
      - pg:/data/postgres
    networks:
      net:
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGDATA: /data/postgres

  back:
    image: docker.nexus.jiveoff.fr/efrei-craft/animus:stable
    restart: always
    tty: true
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.animus.rule=Host(`api.dev.efreicraft.fr`)"
        - "traefik.http.routers.animus.entrypoints=websecure"
        - "traefik.http.services.animus.loadbalancer.server.port=3000"
    depends_on:
      - db
    environment:
      NODE_ENV: production
      API_HOST: api.dev.efreicraft.fr
      DATABASE_URL: postgres://postgres:postgres@db:5432/postgres
    networks:
      traefik_public:
        aliases:
          - api.dev.efreicraft.fr
      net:

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: bureau@efreicraft.fr
      PGADMIN_DEFAULT_PASSWORD: bureaudev
      SCRIPT_NAME: /pgadmin
    volumes:
      - /config/pgadmin/servers.json:/pgadmin4/servers.json
      - /config/pgadmin/config_local.py:/pgadmin4/config_local.py
    networks:
      net:
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.db.rule=Host(`db.dev.efreicraft.fr`) && PathPrefix(`/pgadmin`)"
        - "traefik.http.routers.db.entrypoints=websecure"

volumes:
  pg:
    driver: local

networks:
  net:
  traefik_public:
    external: true